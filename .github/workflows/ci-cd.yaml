name: API CI AND CD

on:
  push:
    branches: [main, develop, devlop_test_push]
  pull_request:
    branches: [main, develop, devlop_test_push]

jobs:
  testing:
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20.x
      
      - name: Install Dependencies
        run: npm install
      
      - name: Run unit and integration tests
        run: npm run test

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/taskapi:latest
  
      - name: App service auth
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'app-name'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: '${{ secrets.DOCKERHUB_USERNAME }}/taskapi:latest'
      
      - name: Azure restart image
        uses: azure/cli@v2
        with:
          azcliversion: 2.30.0
          inlineScript: |
            az login --service-principal -u "${{ secrets.APP_ID_AZURE }}" -p "${{ secrets.APP_PASSWORD_AZURE }}" --tenant "${{ secrets.APP_TENANT_AZURE }}"
            az webapp restart --name "${{ secrets.WEB_APPNAME }}" --resource-group "${{ secrets.RESOURCE_GROUP_NAME }}"
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  CI_CD_success_notification:
    needs: [testing, build, security]
    runs-on: ubuntu-latest
    steps:
      - name: Notify success on Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: 'CI/CD Completed'